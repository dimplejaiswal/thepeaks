/* eslint-disable no-console */
/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CircularDependencyPlugin = require('circular-dependency-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const { merge } = require('webpack-merge');

const webpackBase = require('./webpack.base');

const BASE_PATH = '../../';
const APP_DIR = path.join(__dirname, BASE_PATH, 'src');

module.exports = merge(webpackBase, {
    mode: 'development',

    // Add hot reloading in development
    entry: [require.resolve('react-app-polyfill/ie11'), `${APP_DIR}/index.js`],

    // Don't use hashes in dev mode for better performance
    output: {
        filename: 'js/[name].js',
        chunkFilename: 'js/[name].chunk.js',
        path: path.resolve(__dirname, BASE_PATH, 'dist'),
        publicPath: '/',
    },

    optimization: {
        splitChunks: {
            chunks: 'all',
        },
    },

    // Add development plugins
    plugins: [
        new HtmlWebpackPlugin({
            inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
            template: 'public/index.html',
        }),
        new CircularDependencyPlugin({
            exclude: /a\.js|node_modules/, // exclude node_modules
            failOnError: false, // show a warning when there is a circular dependency
        }),
        new MiniCssExtractPlugin({
            filename: 'css/[name].css',
            chunkFilename: 'css/[name].css',
        }),
        new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    ],

    // Emit a source map for easier debugging
    // See https://webpack.js.org/configuration/devtool/#devtool
    devtool: 'eval-source-map',

    performance: {
        hints: false,
    },

    devServer: {
        historyApiFallback: true,
        publicPath: '/',
        contentBase: path.join(__dirname, BASE_PATH, 'dist'),
        compress: true,
        port: 9000,
    },
});
